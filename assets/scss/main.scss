@layer reset, base, overrides;

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  @font-face {
    font-family: "Inter";
    src: local("Inter"),
      url("../fonts/Inter-VariableFont_slnt,wght.woff2")
        format("woff2-variations");
    // src: url("../fonts/Nunito-VariableFont_wght.ttf") format("woff2-variations");
    font-weight: 400 700;
    font-style: normal;
    font-feature-settings: "liga" 1, "calt" 1;
    unicode-range: U+0020-007F, U+00A0-00FF;
  }
}
html {
  scroll-behavior: smooth;
}

.focus-ring {
  @apply focus-visible:outline-none focus-visible:ring-1 ring-primary-500 ring-offset-2;
}
* {
  min-width: 0;
}
body {
  min-width: var(--min-w-80);
}
a {
  cursor: pointer;
}
.markdown {
  h1,
  h2,
  h3,
  h4 {
    font-weight: var(--font-bold);
    line-height: 1.2;
    margin-block: 1em;
    a:hover {
      text-decoration: none;
      &::before {
        content: "#";
        position: absolute;
        transform: translateX(-100%);
        padding: 0 0.5ex;
        @apply text-neutral-300;
      }
    }
  }

  h1 {
    font-size: var(--text-4xl);
  }

  h2 {
    font-size: var(--text-3xl);
  }

  h3 {
    font-size: var(--text-2xl);
  }

  h4 {
    font-size: var(--text-xl);
  }

  a {
    color: var(--color-gold-500);

    &:hover {
      text-decoration: underline;
    }
  }

  hr {
    border: 1px solid var(--color-gray-200);
    margin-block: var(--h-12);
  }

  :is(p, ul, ol) + :is(p, ul, ol) {
    margin-top: var(--m-3);
  }

  ul {
    list-style: disc;
    padding-left: var(--p-5);
  }

  ol {
    list-style: decimal;
    padding-left: var(--p-5);
  }

  @media (max-width: 767px) {
    h1 {
      font-size: var(--text-3xl);
    }

    h2 {
      font-size: var(--text-2xl);
    }

    h3 {
      font-size: var(--text-1xl);
    }

    h4 {
      font-size: var(--text-lg);
    }
  }
  table {
    @apply w-full table-fixed my-5;
    td,
    th {
      @apply px-3 py-2 align-top hyphens-auto leading-tight;
    }
    thead th,
    tr:nth-child(even) td {
      @apply first:rounded-l-lg last:rounded-r-lg bg-neutral-100;
    }
  }
}

span,
label,
p {
  a[target="_blank"]:after {
    content: "\00a0\2197";
  }
}
.text-shadow {
  text-shadow: 0 5px 15px var(--tw-shadow-color, black);
}
.formkit-outer:is([data-family="text"], [data-type="textarea"], [data-family="dropdown"]) {
  --left: calc(var(--p-4) + 1px);
  --right: var(--p-4);
  --y: var(--p-4);
  --x: 0;
  --scale: 1;

  .formkit-inner {
    position: relative;
    .formkit-icon {
      top: var(--y);
    }
    // align-items: center;
    // &:has(:-webkit-autofill, :autofill) {
    //   .formkit-icon svg {
    //     fill: var(--color-blue-600);
    //     opacity: .5;
    //   }
    // }
  }
  .formkit-input {
    padding-left: var(--left);
    padding-right: var(--right);
  }

  &[data-prefix-icon="true"] {
    --left: 46px;
  }
  &[data-suffix-icon="true"] {
    --right: 46px;
  }
}
.formkit-outer:is([data-family="text"], [data-type="textarea"], [data-family="dropdown"])[data-floating-label="true"] {
  --y: 1.25rem;
  .formkit-input {
    padding-top: calc(var(--p-4) * 1.5);
    padding-bottom: calc(var(--p-4) * 0.5);
    // &::placeholder {
    //   opacity: 0;
    // }
  }
  label.formkit-label {
    pointer-events: none;
    background-color: transparent !important;
    font-weight: 500 !important;
    font-size: var(--text-base) !important;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    transform-origin: 0;
    padding: var(--p-1) !important;
    margin: calc(var(--m-1) * -1) !important;
    cursor: text;
    top: 0 !important;
    width: calc((100% - var(--left) - var(--right)) / var(--scale));
    transform: scale(var(--scale)) translateY(var(--y)) !important;
    left: var(--left) !important;
    opacity: 1 !important;
    color: var(--color-neutral-400);
    transition-property: transform, left, top;
    transition-duration: 300ms;
    // transition-timing-function: cubic-bezier(.125,1,.125,1);
    transition-timing-function: cubic-bezier(.125,1.25,.125,1);
  }

  &:not([data-empty="true"]) label.formkit-label {
    --y: 1.25rem;
    left: var(--left) !important;
    color: var(--color-neutral-500);
  }

  & input:focus ~ label.formkit-label,
  & textarea:focus ~ label.formkit-label,
  &[data-type="textarea"]:not([data-empty="true"]) label.formkit-label,
  &[data-family="text"]:not([data-empty="true"]) label.formkit-label,
  &[data-expanded="true"] label.formkit-label,
  button ~ .formkit-label[data-has-value="true"] {
    --y: 1rem;
    --scale: 0.7;
    left: calc(var(--left) + 1.5px) !important;
    color: var(--color-neutral-500);
  }
  &[data-family="dropdown"]:not([data-empty="true"]) label.formkit-label {
    left: calc(var(--left) - 0.5px) !important;
  }

  &[data-prefix-icon="false"] {
    --left: 10px;
    & input:focus ~ .formkit-label,
    & textarea:focus ~ .formkit-label,
    &[data-family="text"]:not([data-empty="true"]) .formkit-label,
    &[data-expanded="true"] .formkit-label {
      left: var(--left) !important;
    }
  }
  textarea ~ .formkit-label {
    // --y: var(--p-3);
    white-space: pre-wrap;
  }
  button ~ .formkit-label {
    --y: 1rem;
    left: var(--left) !important;
  }

  button.active ~ .formkit-label,
  input:focus ~ .formkit-label,
  textarea:focus ~ .formkit-label,
  .formkit-label[data-has-value="true"],
  &[data-complete="true"] .formkit-label {
    --top: 25%;
  }
  textarea:focus ~ .formkit-label,
  textarea ~ .formkit-label[data-has-value="true"],
  &[data-complete="true"] textarea ~ .formkit-label {
    --top: -0.5em;
    white-space: nowrap;
  }
  button ~ .formkit-label[data-has-value="true"],
  &[data-complete="true"] button ~ .formkit-label {
    --top: 0em;
  }
}
